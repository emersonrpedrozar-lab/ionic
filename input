import { Component, Input, forwardRef } from '@angular/core';
import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';


@Component({
selector: 'app-input',
templateUrl: './input.component.html',
providers: [
{
provide: NG_VALUE_ACCESSOR,
useExisting: forwardRef(() => InputComponent),
multi: true
}
]
})
export class InputComponent implements ControlValueAccessor {
@Input() type: 'text' | 'email' | 'password' = 'text';
@Input() placeholder = '';
@Input() disabled = false;


value = '';
onChange = (v: any) => {};
onTouched = () => {};


writeValue(obj: any): void { this.value = obj; }
registerOnChange(fn: any): void { this.onChange = fn; }
registerOnTouched(fn: any): void { this.onTouched = fn; }
setDisabledState?(isDisabled: boolean): void { this.disabled = isDisabled; }


input(event: any) {
this.value = event.target.value;
this.onChange(this.value);
}
}
